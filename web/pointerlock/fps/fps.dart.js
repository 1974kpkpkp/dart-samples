// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.Null = {"":"Object;"
};

$$.CastErrorImplementation = {"":"Object;actualType,expectedType",
 toString$0: function() {
  return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
}
};

$$.MetaInfo = {"":"Object;_tag>,_tags,_set>"
};

$$.JSSyntaxRegExp = {"":"Object;_liblib0$_pattern,_multiLine,_ignoreCase",
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
}
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  t1.i_1 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
    if ($.gtB(t1.i_1, 0)) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_0;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_0;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_0 = $.StringBuffer_StringBuffer("");
      t1.i_1 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_1, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
          if ($.gtB(t1.i_1, 0)) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
      else {
        t3 = t1.sb_0;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_0;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message",
 toString$0: function() {
  return "Unsupported operation: " + this.message;
}
};

$$.StateError = {"":"Object;message",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$.RuntimeError = {"":"Object;message",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._ExceptionImplementation = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$._HashMapImpl = {"":"Object;_keys,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (insertionIndex = -1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      hash = $.and(t1, this._keys.length - 1);
      insertionIndex = -1;
      numberOfProbes = 1;
    case 2:
      var t1, key, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CONSTANT3)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CONSTANT3)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CONSTANT3)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: true
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key>,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: true
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element>",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_0 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_0;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  this._length = $.add(this._length, $.getInterceptor$JSStringJSArray(str).get$length(str));
  return this;
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 get$length: function(receiver) {
  return receiver.get$length();
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.FpsControllerView = {"":"Object;elementId,canvas,camera,controller,ownMouse,webGL,vertexShader,fragmentShader,shaderProgram,vertexBuffer,cameraTransform,numVertices,lastTime",
 _generateLine$4: function(vertexBuffer, b, e, color) {
  vertexBuffer.push(b.x);
  vertexBuffer.push(b.y);
  vertexBuffer.push(b.z);
  vertexBuffer.push(color.get$r());
  vertexBuffer.push(color.get$g());
  vertexBuffer.push(color.get$b());
  vertexBuffer.push(color.get$a());
  vertexBuffer.push(e.x);
  vertexBuffer.push(e.y);
  vertexBuffer.push(e.z);
  vertexBuffer.push(color.get$r());
  vertexBuffer.push(color.get$g());
  vertexBuffer.push(color.get$b());
  vertexBuffer.push(color.get$a());
},
 _generateLines$6: function(vertexBuffer, b, e, step, color, num) {
  var lineStart, lineEnd, i;
  lineStart = $.vec3$copy(b);
  lineEnd = $.vec3$copy(e);
  for (i = 0; i < num; ++i) {
    this._generateLine$4(vertexBuffer, lineStart, lineEnd, color);
    lineStart.add$1(step);
    lineEnd.add$1(step);
  }
},
 _generateVertexBuffer$0: function() {
  var vertexBufferData, colors, b, e, s;
  this.vertexBuffer = this.webGL.createBuffer$0();
  vertexBufferData = $.List_List(null);
  colors = $.makeLiteralMap(["red", $.vec4$raw(1, 0, 0, 1), "green", $.vec4$raw(0, 1, 0, 1), "blue", $.vec4$raw(0, 0, 1, 1)]);
  b = $.vec3$raw(0, 0, -20);
  e = $.vec3$raw(0, 0, 0);
  s = $.vec3$raw(1, 0, 0);
  this._generateLines$6(vertexBufferData, b, e, s, $.index(colors, "green"), 21);
  b.setComponents$3(0, 0, 0);
  e.setComponents$3(20, 0, 0);
  s.setComponents$3(0, 0, -1);
  this._generateLines$6(vertexBufferData, b, e, s, $.index(colors, "green"), 21);
  b.setComponents$3(20, 0, 0);
  e.setComponents$3(20, 20, 0);
  s.setComponents$3(0, 0, -1);
  this._generateLines$6(vertexBufferData, b, e, s, $.index(colors, "blue"), 21);
  b.setComponents$3(20, 0, 0);
  e.setComponents$3(20, 0, -20);
  s.setComponents$3(0, 1, 0);
  this._generateLines$6(vertexBufferData, b, e, s, $.index(colors, "blue"), 21);
  b.setComponents$3(0, 0, -20);
  e.setComponents$3(0, 20, -20);
  s.setComponents$3(1, 0, 0);
  this._generateLines$6(vertexBufferData, b, e, s, $.index(colors, "red"), 21);
  b.setComponents$3(0, 0, -20);
  e.setComponents$3(20, 0, -20);
  s.setComponents$3(0, 1, 0);
  this._generateLines$6(vertexBufferData, b, e, s, $.index(colors, "red"), 21);
  this.numVertices = $.tdiv(vertexBufferData.length, 7);
  this.webGL.bindBuffer$2(34962, this.vertexBuffer);
  this.webGL.bufferData$3(34962, $.Float32Array_Float32Array$fromList(vertexBufferData), 35044);
},
 initWebGL$0: function() {
  var t1 = this.canvas;
  if (t1 == null)
    throw $.$$throw($.Exception_Exception("canvas not found " + this.elementId + " can't be found"));
  t1.set$width(640);
  this.canvas.set$height(480);
  this.webGL = this.canvas.getContext$1("experimental-webgl");
  t1 = this.webGL;
  if (t1 == null)
    throw $.$$throw($.Exception_Exception("WebGL is not supported"));
  this.vertexShader = t1.createShader$1(35633);
  this.fragmentShader = this.webGL.createShader$1(35632);
  this.shaderProgram = this.webGL.createProgram$0();
  this.webGL.shaderSource$2(this.vertexShader, "      precision highp float;\n      attribute vec3 vPosition;\n      attribute vec4 vColor;\n      uniform mat4 cameraTransform;\n      varying vec4 fColor;\n      void main() {\n        fColor = vColor;\n        vec4 vPosition4 = vec4(vPosition.x, vPosition.y, vPosition.z, 1.0);\n        gl_Position = cameraTransform*vPosition4;\n      }\n    ");
  this.webGL.shaderSource$2(this.fragmentShader, "      precision mediump float;\n      varying vec4 fColor;\n      void main() {\n        gl_FragColor = fColor;\n      }\n    ");
  this.webGL.compileShader$1(this.vertexShader);
  this.webGL.compileShader$1(this.fragmentShader);
  this.webGL.attachShader$2(this.shaderProgram, this.vertexShader);
  this.webGL.attachShader$2(this.shaderProgram, this.fragmentShader);
  this.webGL.linkProgram$1(this.shaderProgram);
  this._generateVertexBuffer$0();
},
 clicked$1: function(event$) {
  this.canvas.webkitRequestPointerLock$0();
},
 get$clicked: function() {
  return new $.BoundClosure(this, 'clicked$1');
},
 get$_pointerLocked: function() {
  return $.eq(this.canvas, $.document().get$webkitPointerLockElement());
},
 pointerLockChange$1: function(event$) {
  this.ownMouse = this.get$_pointerLocked();
},
 get$pointerLockChange: function() {
  return new $.BoundClosure(this, 'pointerLockChange$1');
},
 keydown$1: function(event$) {
  if (this.ownMouse !== true)
    return;
  switch (event$.get$keyCode()) {
    case 87:
      this.controller.forward = true;
      break;
    case 65:
      this.controller.strafeLeft = true;
      break;
    case 68:
      this.controller.strafeRight = true;
      break;
    case 83:
      this.controller.backward = true;
      break;
  }
},
 get$keydown: function() {
  return new $.BoundClosure(this, 'keydown$1');
},
 keyup$1: function(event$) {
  if (this.ownMouse !== true)
    return;
  switch (event$.get$keyCode()) {
    case 87:
      this.controller.forward = false;
      break;
    case 65:
      this.controller.strafeLeft = false;
      break;
    case 68:
      this.controller.strafeRight = false;
      break;
    case 83:
      this.controller.backward = false;
      break;
  }
},
 get$keyup: function() {
  return new $.BoundClosure(this, 'keyup$1');
},
 mouseMove$1: function(event$) {
  var t1;
  if (this.ownMouse !== true)
    return;
  t1 = this.controller;
  t1.accumDX = $.add(t1.accumDX, event$.get$webkitMovementX());
  t1 = this.controller;
  t1.accumDY = $.add(t1.accumDY, event$.get$webkitMovementY());
},
 get$mouseMove: function() {
  return new $.BoundClosure(this, 'mouseMove$1');
},
 bind$0: function() {
  var t1 = $.document().get$on().get$pointerLockChange();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$pointerLockChange());
  t1 = this.canvas.get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$clicked());
  t1 = $.document().get$on().get$keyDown();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$keydown());
  t1 = $.document().get$on().get$keyUp();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$keyup());
  t1 = $.document().get$on().get$mouseMove();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$mouseMove());
},
 update$1: function(time) {
  var t1, dt;
  t1 = this.lastTime;
  if (t1 == null) {
    this.lastTime = time;
    return;
  }
  dt = $.div($.sub(time, t1), 1000);
  this.lastTime = time;
  this.controller.updateCamera$2(dt, this.camera);
},
 draw$0: function() {
  var t1, t2, cameraTransformUniformIndex, view;
  t1 = this.webGL;
  t2 = this.canvas;
  t1.viewport$4(0, 0, t2.get$width(), t2.get$height());
  this.webGL.clearColor$4(0, 0, 0, 1);
  this.webGL.clearDepth$1(1);
  this.webGL.clear$1(16640);
  this.webGL.disable$1(2929);
  this.webGL.enableVertexAttribArray$1(0);
  this.webGL.enableVertexAttribArray$1(1);
  this.webGL.bindBuffer$2(34962, this.vertexBuffer);
  this.webGL.vertexAttribPointer$6(0, 4, 5126, false, 28, 12);
  this.webGL.bindBuffer$2(34962, this.vertexBuffer);
  this.webGL.vertexAttribPointer$6(1, 3, 5126, false, 28, 0);
  this.webGL.useProgram$1(this.shaderProgram);
  cameraTransformUniformIndex = this.webGL.getUniformLocation$2(this.shaderProgram, "cameraTransform");
  view = this.camera.get$lookAtMatrix();
  $.mul(this.camera.get$projectionMatrix(), view).copyIntoArray$2(this.cameraTransform, 0);
  this.webGL.uniformMatrix4fv$3(cameraTransformUniformIndex, false, this.cameraTransform);
  this.webGL.drawArrays$3(1, 0, this.numVertices);
  this.webGL.flush$0();
},
 FpsControllerView$1: function(elementId) {
  this.camera = $.Camera$();
  this.controller = $.MouseKeyboardCameraController$();
  this.canvas = $.query(this.elementId);
  this.ownMouse = false;
  this.cameraTransform = $.Float32Array_Float32Array(16);
}
};

$$.Camera = {"":"Object;eyePosition>,upDirection,lookAtPosition=,zNear,zFar,aspectRatio,fOV",
 toString$0: function() {
  return $.S(this.eyePosition) + " -> " + $.S(this.lookAtPosition);
},
 get$projectionMatrix: function() {
  return $.makePerspective(this.fOV, this.aspectRatio, this.zNear, this.zFar);
},
 get$lookAtMatrix: function() {
  return $.makeLookAt(this.eyePosition, this.lookAtPosition, this.upDirection);
},
 get$frontDirection: function() {
  return $.sub(this.lookAtPosition, this.eyePosition);
},
 Camera$0: function() {
  this.eyePosition = $.vec3$raw(0, 2, 0);
  this.lookAtPosition = $.vec3$raw(1, 2, -1);
  this.upDirection = $.vec3$raw(0, 1, 0);
  this.fOV = 0.785398163;
  this.zNear = 1;
  this.zFar = 1000;
  this.aspectRatio = 1.7777778;
}
};

$$.MouseKeyboardCameraController = {"":"Object;up,down,strafeLeft<,strafeRight<,forward<,backward<,floatVelocity,strafeVelocity,forwardVelocity,mouseSensitivity,accumDX=,accumDY=",
 updateCamera$2: function(seconds, cam) {
  this._moveFloat$4(seconds, this.up, this.down, cam);
  this._moveStrafe$4(seconds, this.strafeRight, this.strafeLeft, cam);
  this._moveForward$4(seconds, this.forward, this.backward, cam);
  this._rotateView$2(seconds, cam);
},
 _velocityScale$2: function(positive, negative) {
  var scale = positive === true ? 1 : 0;
  return negative === true ? scale - 1 : scale;
},
 _moveFloat$4: function(dt, positive, negative, cam) {
  var scale, scale0, upDirection, t1;
  scale = this._velocityScale$2(positive, negative);
  if ($.eqB(scale, 0))
    return;
  scale0 = $.mul($.mul(scale, dt), this.floatVelocity);
  upDirection = $.vec3$raw(0, 1, 0);
  upDirection.scale$1(scale0);
  t1 = cam.get$lookAtPosition();
  $.getInterceptor$JSArray(t1).add$1(t1, upDirection);
  t1 = cam.get$eyePosition();
  $.getInterceptor$JSArray(t1).add$1(t1, upDirection);
},
 _moveStrafe$4: function(dt, positive, negative, cam) {
  var scale, scale0, frontDirection, strafeDirection, t1;
  scale = this._velocityScale$2(positive, negative);
  if ($.eqB(scale, 0))
    return;
  scale0 = $.mul($.mul(scale, dt), this.strafeVelocity);
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  strafeDirection = frontDirection.cross$1($.vec3$raw(0, 1, 0));
  strafeDirection.scale$1(scale0);
  t1 = cam.get$lookAtPosition();
  $.getInterceptor$JSArray(t1).add$1(t1, strafeDirection);
  t1 = cam.get$eyePosition();
  $.getInterceptor$JSArray(t1).add$1(t1, strafeDirection);
},
 _moveForward$4: function(dt, positive, negative, cam) {
  var scale, scale0, frontDirection, t1;
  scale = this._velocityScale$2(positive, negative);
  if ($.eqB(scale, 0))
    return;
  scale0 = $.mul($.mul(scale, dt), this.forwardVelocity);
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  frontDirection.scale$1(scale0);
  t1 = cam.get$lookAtPosition();
  $.getInterceptor$JSArray(t1).add$1(t1, frontDirection);
  t1 = cam.get$eyePosition();
  $.getInterceptor$JSArray(t1).add$1(t1, frontDirection);
},
 _rotateView$2: function(dt, cam) {
  var frontDirection, upDirection, strafeDirection, t1, t2, mouseYawDelta, mousePitchDelta;
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  upDirection = $.vec3$raw(0, 1, 0);
  strafeDirection = frontDirection.cross$1(upDirection);
  strafeDirection.normalize$0();
  t1 = this.accumDX;
  t2 = this.mouseSensitivity;
  mouseYawDelta = $.div(t1, t2);
  mousePitchDelta = $.div(this.accumDY, t2);
  this.accumDX = 0;
  this.accumDY = 0;
  if ($.gtB(frontDirection.get$y(), 0))
    ;
  $.degrees($.acos(frontDirection.dot$1(upDirection), null), null);
  $.degrees(0.785398163, null);
  $.degrees(2.35619449, null);
  this._rotateEyeAndLook$3(mousePitchDelta, strafeDirection, cam);
  this._rotateEyeAndLook$3(mouseYawDelta, upDirection, cam);
},
 _rotateEyeAndLook$3: function(delta_angle, axis, cam) {
  var q, frontDirection;
  q = $.quat$(axis, delta_angle, null, null);
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  q.rotate$1(frontDirection);
  frontDirection.normalize$0();
  cam.set$lookAtPosition($.add(cam.get$eyePosition(), frontDirection));
}
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr"
};

$$.DocumentEvents = {"":"ElementEvents;_ptr",
 get$pointerLockChange: function() {
  return this.operator$index$1("webkitpointerlockchange");
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$click: function() {
  return this.operator$index$1("click");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$keyUp: function() {
  return this.operator$index$1("keyup");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr"
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$click: function() {
  return this.operator$index$1("click");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$keyUp: function() {
  return this.operator$index$1("keyup");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_liblib$_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.vec2 = {"":"Object;x=,y=",
 toString$0: function() {
  return $.S(this.x) + "," + $.S(this.y);
},
 operator$negate$0: function() {
  return $.vec2$raw($.neg(this.x), $.neg(this.y));
},
 operator$sub$1: function(other) {
  return $.vec2$raw($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()));
},
 operator$add$1: function(other) {
  return $.vec2$raw($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$div$1: function(other) {
  if (typeof other === 'number')
    return $.vec2$raw($.div(this.x, other), $.div(this.y, other));
  if (typeof other === 'object' && other !== null && !!other.is$vec2)
    return $.vec2$raw($.div(this.x, other.x), $.div(this.y, other.y));
},
 operator$mul$1: function(other) {
  if (typeof other === 'number')
    return $.vec2$raw($.mul(this.x, other), $.mul(this.y, other));
  if (typeof other === 'object' && other !== null && !!other.is$vec2)
    return $.vec2$raw($.mul(this.x, other.x), $.mul(this.y, other.y));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
  }
  return 0;
},
 operator$indexSet$2: function(i, v) {
  switch (i) {
    case 0:
      this.x = v;
      break;
    case 1:
      this.y = v;
      break;
  }
},
 get$length: function() {
  var t1, sum;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = this.y;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.sqrt(sum + t1);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  return this;
},
 dot$1: function(other) {
  var t1, sum;
  t1 = $.mul(this.x, other.x);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = $.mul(this.y, other.y);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return sum + t1;
},
 cross$1: function(other) {
  return $.sub($.mul(this.x, other.get$y()), $.mul(this.y, other.get$x()));
},
 get$r: function() {
  return this.x;
},
 get$g: function() {
  return this.y;
},
 add$1: function(arg) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.add$1$bailout1(1, arg, t1);
  t3 = arg.get$x();
  if (typeof t3 !== 'number')
    return this.add$1$bailout1(2, arg, t3, t1);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.add$1$bailout1(3, arg, t5);
  t7 = arg.get$y();
  if (typeof t7 !== 'number')
    return this.add$1$bailout1(4, t5, t7);
  this.y = t5 + t7;
  return this;
},
 add$1$bailout1: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      arg = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      arg = env0;
      break;
    case 3:
      t5 = env1;
      arg = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = arg.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = arg.get$y();
    case 4:
      var t1, arg, t3, t5, t7;
      state0 = 0;
      this.y = $.add(t5, t7);
      return this;
  }
},
 scale$1: function(arg) {
  this.x = $.mul(this.x, arg);
  this.y = $.mul(this.y, arg);
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.x);
  i = $.add(offset, 1);
  $.indexSet(array, i, this.y);
  $.add(i, 1);
},
 vec2$raw$2: function(x_, y_) {
  this.x = x_;
  this.y = y_;
},
 vec2$zero$0: function() {
  this.x = 0;
  this.y = 0;
},
 is$vec2: true
};

$$.vec3 = {"":"Object;x=,y=,z=",
 toString$0: function() {
  return $.S(this.x) + "," + $.S(this.y) + "," + $.S(this.z);
},
 operator$negate$0: function() {
  return $.vec3$raw($.neg(this.x), $.neg(this.y), $.neg(this.z));
},
 operator$sub$1: function(other) {
  return $.vec3$raw($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()), $.sub(this.z, other.get$z()));
},
 operator$add$1: function(other) {
  return $.vec3$raw($.add(this.x, other.get$x()), $.add(this.y, other.get$y()), $.add(this.z, other.get$z()));
},
 operator$div$1: function(other) {
  if (typeof other === 'number')
    return $.vec3$raw($.div(this.x, other), $.div(this.y, other), $.div(this.z, other));
  if (typeof other === 'object' && other !== null && !!other.is$vec3)
    return $.vec3$raw($.div(this.x, other.x), $.div(this.y, other.y), $.div(this.z, other.z));
},
 operator$mul$1: function(other) {
  if (typeof other === 'number')
    return $.vec3$raw($.mul(this.x, other), $.mul(this.y, other), $.mul(this.z, other));
  if (typeof other === 'object' && other !== null && !!other.is$vec3)
    return $.vec3$raw($.mul(this.x, other.x), $.mul(this.y, other.y), $.mul(this.z, other.z));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
    case 2:
      return this.z;
  }
  return 0;
},
 operator$indexSet$2: function(i, v) {
  switch (i) {
    case 0:
      this.x = v;
      break;
    case 1:
      this.y = v;
      break;
    case 2:
      this.z = v;
      break;
  }
},
 get$length: function() {
  var t1, sum;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = this.y;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = this.z;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.sqrt(sum + t1);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  this.z = $.div(this.z, l);
  return this;
},
 dot$1: function(other) {
  var t1, sum;
  t1 = $.mul(this.x, other.x);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = $.mul(this.y, other.y);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = $.mul(this.z, other.z);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return sum + t1;
},
 cross$2: function(other, out) {
  if (out == null)
    out = $.vec3$zero();
  out.set$x($.sub($.mul(this.y, other.get$z()), $.mul(this.z, other.get$y())));
  out.set$y($.sub($.mul(this.z, other.get$x()), $.mul(this.x, other.get$z())));
  out.set$z($.sub($.mul(this.x, other.get$y()), $.mul(this.y, other.get$x())));
  return out;
},
 cross$1: function(other) {
  return this.cross$2(other, null);
},
 set$xyz: function(arg) {
  this.x = arg.get$x();
  this.y = arg.get$y();
  this.z = arg.get$z();
},
 get$r: function() {
  return this.x;
},
 get$g: function() {
  return this.y;
},
 get$b: function() {
  return this.z;
},
 add$1: function(arg) {
  var t1, t3, t5, t7, t9, t11;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, arg, t1);
  t3 = arg.get$x();
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, arg, t1, t3);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.add$1$bailout(3, arg, t5);
  t7 = arg.get$y();
  if (typeof t7 !== 'number')
    return this.add$1$bailout(4, arg, t7, t5);
  this.y = t5 + t7;
  t9 = this.z;
  if (typeof t9 !== 'number')
    return this.add$1$bailout(5, t9, arg);
  t11 = arg.get$z();
  if (typeof t11 !== 'number')
    return this.add$1$bailout(6, t9, t11);
  this.z = t9 + t11;
  return this;
},
 add$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      arg = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      arg = env0;
      break;
    case 3:
      t5 = env1;
      arg = env0;
      break;
    case 4:
      t5 = env2;
      t7 = env1;
      arg = env0;
      break;
    case 5:
      arg = env1;
      t9 = env0;
      break;
    case 6:
      t11 = env1;
      t9 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = arg.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = arg.get$y();
    case 4:
      state0 = 0;
      this.y = $.add(t5, t7);
      t9 = this.z;
    case 5:
      state0 = 0;
      t11 = arg.get$z();
    case 6:
      var t1, arg, t3, t5, t7, t9, t11;
      state0 = 0;
      this.z = $.add(t9, t11);
      return this;
  }
},
 scale$1: function(arg) {
  this.x = $.mul(this.x, arg);
  this.y = $.mul(this.y, arg);
  this.z = $.mul(this.z, arg);
  return this;
},
 setComponents$3: function(x_, y_, z_) {
  this.x = x_;
  this.y = y_;
  this.z = z_;
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.x);
  i = $.add(offset, 1);
  $.indexSet(array, i, this.y);
  i = $.add(i, 1);
  $.indexSet(array, i, this.z);
  $.add(i, 1);
},
 vec3$zero$0: function() {
  this.x = 0;
  this.y = 0;
  this.z = 0;
},
 vec3$raw$3: function(x_, y_, z_) {
  this.x = x_;
  this.y = y_;
  this.z = z_;
},
 vec3$copy$1: function(other) {
  this.x = other.get$x();
  this.y = other.get$y();
  this.z = other.get$z();
},
 is$vec3: true
};

$$.vec4 = {"":"Object;x=,y=,z=,w=",
 toString$0: function() {
  return $.S(this.x) + "," + $.S(this.y) + "," + $.S(this.z) + "," + $.S(this.w);
},
 operator$negate$0: function() {
  return $.vec4$raw($.neg(this.x), $.neg(this.y), $.neg(this.z), $.neg(this.w));
},
 operator$sub$1: function(other) {
  return $.vec4$raw($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()), $.sub(this.z, other.get$z()), $.sub(this.w, other.get$w()));
},
 operator$add$1: function(other) {
  return $.vec4$raw($.add(this.x, other.get$x()), $.add(this.y, other.get$y()), $.add(this.z, other.get$z()), $.add(this.w, other.get$w()));
},
 operator$div$1: function(other) {
  if (typeof other === 'number')
    return $.vec4$raw($.div(this.x, other), $.div(this.y, other), $.div(this.z, other), $.div(this.w, other));
  if (typeof other === 'object' && other !== null && !!other.is$vec4)
    return $.vec4$raw($.div(this.x, other.x), $.div(this.y, other.y), $.div(this.z, other.z), $.div(this.w, other.w));
},
 operator$mul$1: function(other) {
  if (typeof other === 'number')
    return $.vec4$raw($.mul(this.x, other), $.mul(this.y, other), $.mul(this.z, other), $.mul(this.w, other));
  if (typeof other === 'object' && other !== null && !!other.is$vec4)
    return $.vec4$raw($.mul(this.x, other.x), $.mul(this.y, other.y), $.mul(this.z, other.z), $.mul(this.w, other.w));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
    case 2:
      return this.z;
    case 3:
      return this.w;
  }
  return 0;
},
 operator$indexSet$2: function(i, v) {
  switch (i) {
    case 0:
      this.x = v;
      break;
    case 1:
      this.y = v;
      break;
    case 2:
      this.z = v;
      break;
    case 3:
      this.w = v;
      break;
  }
},
 get$length: function() {
  var t1, sum;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = this.y;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = this.z;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = this.w;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.sqrt(sum + t1);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  this.z = $.div(this.z, l);
  this.w = $.div(this.w, l);
  return this;
},
 dot$1: function(other) {
  var t1, sum;
  t1 = $.mul(this.x, other.x);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = $.mul(this.y, other.y);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = $.mul(this.z, other.z);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = $.mul(this.w, other.get$w());
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return sum + t1;
},
 set$xyz: function(arg) {
  this.x = arg.get$x();
  this.y = arg.get$y();
  this.z = arg.get$z();
},
 get$r: function() {
  return this.x;
},
 get$g: function() {
  return this.y;
},
 get$b: function() {
  return this.z;
},
 get$a: function() {
  return this.w;
},
 add$1: function(arg) {
  var t1, t3, t5, t7, t9, t11, t13, t15;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.add$1$bailout0(1, arg, t1);
  t3 = arg.get$x();
  if (typeof t3 !== 'number')
    return this.add$1$bailout0(2, arg, t1, t3);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.add$1$bailout0(3, arg, t5);
  t7 = arg.get$y();
  if (typeof t7 !== 'number')
    return this.add$1$bailout0(4, arg, t7, t5);
  this.y = t5 + t7;
  t9 = this.z;
  if (typeof t9 !== 'number')
    return this.add$1$bailout0(5, arg, t9);
  t11 = arg.get$z();
  if (typeof t11 !== 'number')
    return this.add$1$bailout0(6, arg, t9, t11);
  this.z = t9 + t11;
  t13 = this.w;
  if (typeof t13 !== 'number')
    return this.add$1$bailout0(7, arg, t13);
  t15 = arg.get$w();
  if (typeof t15 !== 'number')
    return this.add$1$bailout0(8, t15, t13);
  this.w = t13 + t15;
  return this;
},
 add$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      arg = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      arg = env0;
      break;
    case 3:
      t5 = env1;
      arg = env0;
      break;
    case 4:
      t5 = env2;
      t7 = env1;
      arg = env0;
      break;
    case 5:
      t9 = env1;
      arg = env0;
      break;
    case 6:
      t11 = env2;
      t9 = env1;
      arg = env0;
      break;
    case 7:
      t13 = env1;
      arg = env0;
      break;
    case 8:
      t13 = env1;
      t15 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = arg.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = arg.get$y();
    case 4:
      state0 = 0;
      this.y = $.add(t5, t7);
      t9 = this.z;
    case 5:
      state0 = 0;
      t11 = arg.get$z();
    case 6:
      state0 = 0;
      this.z = $.add(t9, t11);
      t13 = this.w;
    case 7:
      state0 = 0;
      t15 = arg.get$w();
    case 8:
      var t1, arg, t3, t5, t7, t9, t11, t13, t15;
      state0 = 0;
      this.w = $.add(t13, t15);
      return this;
  }
},
 scale$1: function(arg) {
  this.x = $.mul(this.x, arg);
  this.y = $.mul(this.y, arg);
  this.z = $.mul(this.z, arg);
  this.w = $.mul(this.w, arg);
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.x);
  i = $.add(offset, 1);
  $.indexSet(array, i, this.y);
  i = $.add(i, 1);
  $.indexSet(array, i, this.z);
  i = $.add(i, 1);
  $.indexSet(array, i, this.w);
  $.add(i, 1);
},
 vec4$zero$0: function() {
  this.x = 0;
  this.y = 0;
  this.z = 0;
  this.w = 0;
},
 vec4$raw$4: function(x_, y_, z_, w_) {
  this.x = x_;
  this.y = y_;
  this.z = z_;
  this.w = w_;
},
 is$vec4: true
};

$$.mat4 = {"":"Object;col0>,col1>,col2>,col3>",
 toString$0: function() {
  return "[0] " + $.S(this.getRow$1(0)) + "\n" + "[1] " + $.S(this.getRow$1(1)) + "\n" + "[2] " + $.S(this.getRow$1(2)) + "\n" + "[3] " + $.S(this.getRow$1(3)) + "\n";
},
 get$rows: function() {
  return 4;
},
 get$cols: function() {
  return 4;
},
 get$length: function() {
  return 4;
},
 operator$index$1: function(column) {
  switch (column) {
    case 0:
      return this.col0;
    case 1:
      return this.col1;
    case 2:
      return this.col2;
    case 3:
      return this.col3;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
},
 operator$indexSet$2: function(column, arg) {
  switch (column) {
    case 0:
      this.col0 = arg;
      break;
    case 1:
      this.col1 = arg;
      break;
    case 2:
      this.col2 = arg;
      break;
    case 3:
      this.col3 = arg;
      break;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
},
 getRow$1: function(row) {
  var r = $.vec4$zero();
  r.x = $.index(this.col0, row);
  r.y = $.index(this.col1, row);
  r.z = $.index(this.col2, row);
  r.w = $.index(this.col3, row);
  return r;
},
 operator$mul$1: function(arg) {
  var r, t1;
  if (typeof arg === 'number') {
    r = $.mat4$zero();
    t1 = $.mul(this.col0.get$x(), arg);
    r.col0.set$x(t1);
    t1 = $.mul(this.col0.get$y(), arg);
    r.col0.set$y(t1);
    t1 = $.mul(this.col0.get$z(), arg);
    r.col0.set$z(t1);
    t1 = $.mul(this.col0.get$w(), arg);
    r.col0.set$w(t1);
    t1 = $.mul(this.col1.get$x(), arg);
    r.col1.set$x(t1);
    t1 = $.mul(this.col1.get$y(), arg);
    r.col1.set$y(t1);
    t1 = $.mul(this.col1.get$z(), arg);
    r.col1.set$z(t1);
    t1 = $.mul(this.col1.get$w(), arg);
    r.col1.set$w(t1);
    t1 = $.mul(this.col2.get$x(), arg);
    r.col2.set$x(t1);
    t1 = $.mul(this.col2.get$y(), arg);
    r.col2.set$y(t1);
    t1 = $.mul(this.col2.get$z(), arg);
    r.col2.set$z(t1);
    t1 = $.mul(this.col2.get$w(), arg);
    r.col2.set$w(t1);
    t1 = $.mul(this.col3.get$x(), arg);
    r.col3.set$x(t1);
    t1 = $.mul(this.col3.get$y(), arg);
    r.col3.set$y(t1);
    t1 = $.mul(this.col3.get$z(), arg);
    r.col3.set$z(t1);
    t1 = $.mul(this.col3.get$w(), arg);
    r.col3.set$w(t1);
    return r;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    r = $.vec4$zero();
    r.x = $.add($.add($.add($.mul(this.col0.get$x(), arg.x), $.mul(this.col1.get$x(), arg.y)), $.mul(this.col2.get$x(), arg.z)), $.mul(this.col3.get$x(), arg.w));
    r.y = $.add($.add($.add($.mul(this.col0.get$y(), arg.x), $.mul(this.col1.get$y(), arg.y)), $.mul(this.col2.get$y(), arg.z)), $.mul(this.col3.get$y(), arg.w));
    r.z = $.add($.add($.add($.mul(this.col0.get$z(), arg.x), $.mul(this.col1.get$z(), arg.y)), $.mul(this.col2.get$z(), arg.z)), $.mul(this.col3.get$z(), arg.w));
    r.w = $.add($.add($.add($.mul(this.col0.get$w(), arg.x), $.mul(this.col1.get$w(), arg.y)), $.mul(this.col2.get$w(), arg.z)), $.mul(this.col3.get$w(), arg.w));
    return r;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    r = $.vec3$zero();
    r.x = $.add($.add($.add($.mul(this.col0.get$x(), arg.x), $.mul(this.col1.get$x(), arg.y)), $.mul(this.col2.get$x(), arg.z)), this.col3.get$x());
    r.y = $.add($.add($.add($.mul(this.col0.get$y(), arg.x), $.mul(this.col1.get$y(), arg.y)), $.mul(this.col2.get$y(), arg.z)), this.col3.get$y());
    r.z = $.add($.add($.add($.mul(this.col0.get$z(), arg.x), $.mul(this.col1.get$z(), arg.y)), $.mul(this.col2.get$z(), arg.z)), this.col3.get$z());
    return r;
  }
  if (4 === arg.get$rows()) {
    if ($.eqB(arg.get$cols(), 4)) {
      r = $.mat4$zero();
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col0().get$x()), $.mul(this.col1.get$x(), arg.get$col0().get$y())), $.mul(this.col2.get$x(), arg.get$col0().get$z())), $.mul(this.col3.get$x(), arg.get$col0().get$w()));
      r.col0.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col1().get$x()), $.mul(this.col1.get$x(), arg.get$col1().get$y())), $.mul(this.col2.get$x(), arg.get$col1().get$z())), $.mul(this.col3.get$x(), arg.get$col1().get$w()));
      r.col1.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col2().get$x()), $.mul(this.col1.get$x(), arg.get$col2().get$y())), $.mul(this.col2.get$x(), arg.get$col2().get$z())), $.mul(this.col3.get$x(), arg.get$col2().get$w()));
      r.col2.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col3().get$x()), $.mul(this.col1.get$x(), arg.get$col3().get$y())), $.mul(this.col2.get$x(), arg.get$col3().get$z())), $.mul(this.col3.get$x(), arg.get$col3().get$w()));
      r.col3.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col0().get$x()), $.mul(this.col1.get$y(), arg.get$col0().get$y())), $.mul(this.col2.get$y(), arg.get$col0().get$z())), $.mul(this.col3.get$y(), arg.get$col0().get$w()));
      r.col0.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col1().get$x()), $.mul(this.col1.get$y(), arg.get$col1().get$y())), $.mul(this.col2.get$y(), arg.get$col1().get$z())), $.mul(this.col3.get$y(), arg.get$col1().get$w()));
      r.col1.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col2().get$x()), $.mul(this.col1.get$y(), arg.get$col2().get$y())), $.mul(this.col2.get$y(), arg.get$col2().get$z())), $.mul(this.col3.get$y(), arg.get$col2().get$w()));
      r.col2.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col3().get$x()), $.mul(this.col1.get$y(), arg.get$col3().get$y())), $.mul(this.col2.get$y(), arg.get$col3().get$z())), $.mul(this.col3.get$y(), arg.get$col3().get$w()));
      r.col3.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col0().get$x()), $.mul(this.col1.get$z(), arg.get$col0().get$y())), $.mul(this.col2.get$z(), arg.get$col0().get$z())), $.mul(this.col3.get$z(), arg.get$col0().get$w()));
      r.col0.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col1().get$x()), $.mul(this.col1.get$z(), arg.get$col1().get$y())), $.mul(this.col2.get$z(), arg.get$col1().get$z())), $.mul(this.col3.get$z(), arg.get$col1().get$w()));
      r.col1.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col2().get$x()), $.mul(this.col1.get$z(), arg.get$col2().get$y())), $.mul(this.col2.get$z(), arg.get$col2().get$z())), $.mul(this.col3.get$z(), arg.get$col2().get$w()));
      r.col2.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col3().get$x()), $.mul(this.col1.get$z(), arg.get$col3().get$y())), $.mul(this.col2.get$z(), arg.get$col3().get$z())), $.mul(this.col3.get$z(), arg.get$col3().get$w()));
      r.col3.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col0().get$x()), $.mul(this.col1.get$w(), arg.get$col0().get$y())), $.mul(this.col2.get$w(), arg.get$col0().get$z())), $.mul(this.col3.get$w(), arg.get$col0().get$w()));
      r.col0.set$w(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col1().get$x()), $.mul(this.col1.get$w(), arg.get$col1().get$y())), $.mul(this.col2.get$w(), arg.get$col1().get$z())), $.mul(this.col3.get$w(), arg.get$col1().get$w()));
      r.col1.set$w(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col2().get$x()), $.mul(this.col1.get$w(), arg.get$col2().get$y())), $.mul(this.col2.get$w(), arg.get$col2().get$z())), $.mul(this.col3.get$w(), arg.get$col2().get$w()));
      r.col2.set$w(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col3().get$x()), $.mul(this.col1.get$w(), arg.get$col3().get$y())), $.mul(this.col2.get$w(), arg.get$col3().get$z())), $.mul(this.col3.get$w(), arg.get$col3().get$w()));
      r.col3.set$w(t1);
      return r;
    }
    return;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
},
 operator$add$1: function(arg) {
  var r, t1;
  r = $.mat4$zero();
  t1 = $.add(this.col0.get$x(), arg.get$col0().get$x());
  r.col0.set$x(t1);
  t1 = $.add(this.col0.get$y(), arg.get$col0().get$y());
  r.col0.set$y(t1);
  t1 = $.add(this.col0.get$z(), arg.get$col0().get$z());
  r.col0.set$z(t1);
  t1 = $.add(this.col0.get$w(), arg.get$col0().get$w());
  r.col0.set$w(t1);
  t1 = $.add(this.col1.get$x(), arg.get$col1().get$x());
  r.col1.set$x(t1);
  t1 = $.add(this.col1.get$y(), arg.get$col1().get$y());
  r.col1.set$y(t1);
  t1 = $.add(this.col1.get$z(), arg.get$col1().get$z());
  r.col1.set$z(t1);
  t1 = $.add(this.col1.get$w(), arg.get$col1().get$w());
  r.col1.set$w(t1);
  t1 = $.add(this.col2.get$x(), arg.get$col2().get$x());
  r.col2.set$x(t1);
  t1 = $.add(this.col2.get$y(), arg.get$col2().get$y());
  r.col2.set$y(t1);
  t1 = $.add(this.col2.get$z(), arg.get$col2().get$z());
  r.col2.set$z(t1);
  t1 = $.add(this.col2.get$w(), arg.get$col2().get$w());
  r.col2.set$w(t1);
  t1 = $.add(this.col3.get$x(), arg.get$col3().get$x());
  r.col3.set$x(t1);
  t1 = $.add(this.col3.get$y(), arg.get$col3().get$y());
  r.col3.set$y(t1);
  t1 = $.add(this.col3.get$z(), arg.get$col3().get$z());
  r.col3.set$z(t1);
  t1 = $.add(this.col3.get$w(), arg.get$col3().get$w());
  r.col3.set$w(t1);
  return r;
},
 operator$sub$1: function(arg) {
  var r, t1;
  r = $.mat4$zero();
  t1 = $.sub(this.col0.get$x(), arg.get$col0().get$x());
  r.col0.set$x(t1);
  t1 = $.sub(this.col0.get$y(), arg.get$col0().get$y());
  r.col0.set$y(t1);
  t1 = $.sub(this.col0.get$z(), arg.get$col0().get$z());
  r.col0.set$z(t1);
  t1 = $.sub(this.col0.get$w(), arg.get$col0().get$w());
  r.col0.set$w(t1);
  t1 = $.sub(this.col1.get$x(), arg.get$col1().get$x());
  r.col1.set$x(t1);
  t1 = $.sub(this.col1.get$y(), arg.get$col1().get$y());
  r.col1.set$y(t1);
  t1 = $.sub(this.col1.get$z(), arg.get$col1().get$z());
  r.col1.set$z(t1);
  t1 = $.sub(this.col1.get$w(), arg.get$col1().get$w());
  r.col1.set$w(t1);
  t1 = $.sub(this.col2.get$x(), arg.get$col2().get$x());
  r.col2.set$x(t1);
  t1 = $.sub(this.col2.get$y(), arg.get$col2().get$y());
  r.col2.set$y(t1);
  t1 = $.sub(this.col2.get$z(), arg.get$col2().get$z());
  r.col2.set$z(t1);
  t1 = $.sub(this.col2.get$w(), arg.get$col2().get$w());
  r.col2.set$w(t1);
  t1 = $.sub(this.col3.get$x(), arg.get$col3().get$x());
  r.col3.set$x(t1);
  t1 = $.sub(this.col3.get$y(), arg.get$col3().get$y());
  r.col3.set$y(t1);
  t1 = $.sub(this.col3.get$z(), arg.get$col3().get$z());
  r.col3.set$z(t1);
  t1 = $.sub(this.col3.get$w(), arg.get$col3().get$w());
  r.col3.set$w(t1);
  return r;
},
 scale$3: function(x, y, z) {
  var sw, sx, sy, sz, t1;
  sw = typeof x === 'object' && x !== null && !!x.is$vec4 ? x.w : 1;
  if (typeof x === 'object' && x !== null && !!x.is$vec3 || typeof x === 'object' && x !== null && !!x.is$vec4) {
    sx = x.get$x();
    sy = x.get$y();
    sz = x.get$z();
  } else {
    sy = y == null ? x : y;
    sz = z == null ? x : z;
    sx = x;
  }
  t1 = this.col0;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col1;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col2;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col3;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col0;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col1;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col2;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col3;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col0;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col1;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col2;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col3;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col0;
  t1.set$w($.mul(t1.get$w(), sw));
  t1 = this.col1;
  t1.set$w($.mul(t1.get$w(), sw));
  t1 = this.col2;
  t1.set$w($.mul(t1.get$w(), sw));
  t1 = this.col3;
  t1.set$w($.mul(t1.get$w(), sw));
  return this;
},
 scale$1: function(x) {
  return this.scale$3(x, null, null);
},
 operator$negate$0: function() {
  var r = $.mat4$zero();
  r.operator$indexSet$2(0, $.neg(this.operator$index$1(0)));
  r.operator$indexSet$2(1, $.neg(this.operator$index$1(1)));
  r.operator$indexSet$2(2, $.neg(this.operator$index$1(2)));
  r.operator$indexSet$2(3, $.neg(this.operator$index$1(3)));
  return r;
},
 transposed$0: function() {
  var r, t1;
  r = $.mat4$zero();
  t1 = this.col0.get$x();
  r.col0.set$x(t1);
  t1 = this.col1.get$x();
  r.col0.set$y(t1);
  t1 = this.col2.get$x();
  r.col0.set$z(t1);
  t1 = this.col3.get$x();
  r.col0.set$w(t1);
  t1 = this.col0.get$y();
  r.col1.set$x(t1);
  t1 = this.col1.get$y();
  r.col1.set$y(t1);
  t1 = this.col2.get$y();
  r.col1.set$z(t1);
  t1 = this.col3.get$y();
  r.col1.set$w(t1);
  t1 = this.col0.get$z();
  r.col2.set$x(t1);
  t1 = this.col1.get$z();
  r.col2.set$y(t1);
  t1 = this.col2.get$z();
  r.col2.set$z(t1);
  t1 = this.col3.get$z();
  r.col2.set$w(t1);
  t1 = this.col0.get$w();
  r.col3.set$x(t1);
  t1 = this.col1.get$w();
  r.col3.set$y(t1);
  t1 = this.col2.get$w();
  r.col3.set$z(t1);
  t1 = this.col3.get$w();
  r.col3.set$w(t1);
  return r;
},
 add$1: function(o) {
  var t1, t2, t4, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36, t38, t40, t42, t44, t46, t48, t50, t52, t54, t56, t58, t60, t62, t64;
  t1 = this.col0;
  t2 = t1.get$x();
  if (typeof t2 !== 'number')
    return this.add$1$bailout2(1, o, t2);
  t4 = o.get$col0().get$x();
  if (typeof t4 !== 'number')
    return this.add$1$bailout2(2, o, t2, t4);
  t1.set$x(t2 + t4);
  t1 = this.col0;
  t6 = t1.get$y();
  if (typeof t6 !== 'number')
    return this.add$1$bailout2(3, o, t6);
  t8 = o.get$col0().get$y();
  if (typeof t8 !== 'number')
    return this.add$1$bailout2(4, o, t6, t8);
  t1.set$y(t6 + t8);
  t1 = this.col0;
  t10 = t1.get$z();
  if (typeof t10 !== 'number')
    return this.add$1$bailout2(5, o, t10);
  t12 = o.get$col0().get$z();
  if (typeof t12 !== 'number')
    return this.add$1$bailout2(6, o, t10, t12);
  t1.set$z(t10 + t12);
  t1 = this.col0;
  t14 = t1.get$w();
  if (typeof t14 !== 'number')
    return this.add$1$bailout2(7, o, t14);
  t16 = o.get$col0().get$w();
  if (typeof t16 !== 'number')
    return this.add$1$bailout2(8, o, t14, t16);
  t1.set$w(t14 + t16);
  t1 = this.col1;
  t18 = t1.get$x();
  if (typeof t18 !== 'number')
    return this.add$1$bailout2(9, o, t18);
  t20 = o.get$col1().get$x();
  if (typeof t20 !== 'number')
    return this.add$1$bailout2(10, o, t18, t20);
  t1.set$x(t18 + t20);
  t1 = this.col1;
  t22 = t1.get$y();
  if (typeof t22 !== 'number')
    return this.add$1$bailout2(11, o, t22);
  t24 = o.get$col1().get$y();
  if (typeof t24 !== 'number')
    return this.add$1$bailout2(12, o, t22, t24);
  t1.set$y(t22 + t24);
  t1 = this.col1;
  t26 = t1.get$z();
  if (typeof t26 !== 'number')
    return this.add$1$bailout2(13, o, t26);
  t28 = o.get$col1().get$z();
  if (typeof t28 !== 'number')
    return this.add$1$bailout2(14, o, t26, t28);
  t1.set$z(t26 + t28);
  t1 = this.col1;
  t30 = t1.get$w();
  if (typeof t30 !== 'number')
    return this.add$1$bailout2(15, o, t30);
  t32 = o.get$col1().get$w();
  if (typeof t32 !== 'number')
    return this.add$1$bailout2(16, o, t30, t32);
  t1.set$w(t30 + t32);
  t1 = this.col2;
  t34 = t1.get$x();
  if (typeof t34 !== 'number')
    return this.add$1$bailout2(17, o, t34);
  t36 = o.get$col2().get$x();
  if (typeof t36 !== 'number')
    return this.add$1$bailout2(18, o, t34, t36);
  t1.set$x(t34 + t36);
  t1 = this.col2;
  t38 = t1.get$y();
  if (typeof t38 !== 'number')
    return this.add$1$bailout2(19, o, t38);
  t40 = o.get$col2().get$y();
  if (typeof t40 !== 'number')
    return this.add$1$bailout2(20, o, t38, t40);
  t1.set$y(t38 + t40);
  t1 = this.col2;
  t42 = t1.get$z();
  if (typeof t42 !== 'number')
    return this.add$1$bailout2(21, o, t42);
  t44 = o.get$col2().get$z();
  if (typeof t44 !== 'number')
    return this.add$1$bailout2(22, o, t42, t44);
  t1.set$z(t42 + t44);
  t1 = this.col2;
  t46 = t1.get$w();
  if (typeof t46 !== 'number')
    return this.add$1$bailout2(23, o, t46);
  t48 = o.get$col2().get$w();
  if (typeof t48 !== 'number')
    return this.add$1$bailout2(24, o, t46, t48);
  t1.set$w(t46 + t48);
  t1 = this.col3;
  t50 = t1.get$x();
  if (typeof t50 !== 'number')
    return this.add$1$bailout2(25, o, t50);
  t52 = o.get$col3().get$x();
  if (typeof t52 !== 'number')
    return this.add$1$bailout2(26, o, t50, t52);
  t1.set$x(t50 + t52);
  t1 = this.col3;
  t54 = t1.get$y();
  if (typeof t54 !== 'number')
    return this.add$1$bailout2(27, o, t54);
  t56 = o.get$col3().get$y();
  if (typeof t56 !== 'number')
    return this.add$1$bailout2(28, o, t54, t56);
  t1.set$y(t54 + t56);
  t1 = this.col3;
  t58 = t1.get$z();
  if (typeof t58 !== 'number')
    return this.add$1$bailout2(29, o, t58);
  t60 = o.get$col3().get$z();
  if (typeof t60 !== 'number')
    return this.add$1$bailout2(30, o, t58, t60);
  t1.set$z(t58 + t60);
  t1 = this.col3;
  t62 = t1.get$w();
  if (typeof t62 !== 'number')
    return this.add$1$bailout2(31, o, t62);
  t64 = o.get$col3().get$w();
  if (typeof t64 !== 'number')
    return this.add$1$bailout2(32, t62, t64);
  t1.set$w(t62 + t64);
  return this;
},
 add$1$bailout2: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      o = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      o = env0;
      break;
    case 3:
      t3 = env1;
      o = env0;
      break;
    case 4:
      t5 = env2;
      t3 = env1;
      o = env0;
      break;
    case 5:
      t5 = env1;
      o = env0;
      break;
    case 6:
      t7 = env2;
      t5 = env1;
      o = env0;
      break;
    case 7:
      t7 = env1;
      o = env0;
      break;
    case 8:
      t9 = env2;
      t7 = env1;
      o = env0;
      break;
    case 9:
      t9 = env1;
      o = env0;
      break;
    case 10:
      t11 = env2;
      t9 = env1;
      o = env0;
      break;
    case 11:
      t11 = env1;
      o = env0;
      break;
    case 12:
      t13 = env2;
      t11 = env1;
      o = env0;
      break;
    case 13:
      t13 = env1;
      o = env0;
      break;
    case 14:
      t15 = env2;
      t13 = env1;
      o = env0;
      break;
    case 15:
      t15 = env1;
      o = env0;
      break;
    case 16:
      t17 = env2;
      t15 = env1;
      o = env0;
      break;
    case 17:
      t17 = env1;
      o = env0;
      break;
    case 18:
      t19 = env2;
      t17 = env1;
      o = env0;
      break;
    case 19:
      t19 = env1;
      o = env0;
      break;
    case 20:
      t21 = env2;
      t19 = env1;
      o = env0;
      break;
    case 21:
      t21 = env1;
      o = env0;
      break;
    case 22:
      t23 = env2;
      t21 = env1;
      o = env0;
      break;
    case 23:
      t23 = env1;
      o = env0;
      break;
    case 24:
      t25 = env2;
      t23 = env1;
      o = env0;
      break;
    case 25:
      t25 = env1;
      o = env0;
      break;
    case 26:
      t27 = env2;
      t25 = env1;
      o = env0;
      break;
    case 27:
      t27 = env1;
      o = env0;
      break;
    case 28:
      t29 = env2;
      t27 = env1;
      o = env0;
      break;
    case 29:
      t29 = env1;
      o = env0;
      break;
    case 30:
      t31 = env2;
      t29 = env1;
      o = env0;
      break;
    case 31:
      t31 = env1;
      o = env0;
      break;
    case 32:
      t33 = env1;
      t31 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.col0.get$x();
    case 1:
      state0 = 0;
      t3 = o.get$col0().get$x();
    case 2:
      state0 = 0;
      t3 = $.add(t1, t3);
      this.col0.set$x(t3);
      t3 = this.col0.get$y();
    case 3:
      state0 = 0;
      t5 = o.get$col0().get$y();
    case 4:
      state0 = 0;
      t5 = $.add(t3, t5);
      this.col0.set$y(t5);
      t5 = this.col0.get$z();
    case 5:
      state0 = 0;
      t7 = o.get$col0().get$z();
    case 6:
      state0 = 0;
      t7 = $.add(t5, t7);
      this.col0.set$z(t7);
      t7 = this.col0.get$w();
    case 7:
      state0 = 0;
      t9 = o.get$col0().get$w();
    case 8:
      state0 = 0;
      t9 = $.add(t7, t9);
      this.col0.set$w(t9);
      t9 = this.col1.get$x();
    case 9:
      state0 = 0;
      t11 = o.get$col1().get$x();
    case 10:
      state0 = 0;
      t11 = $.add(t9, t11);
      this.col1.set$x(t11);
      t11 = this.col1.get$y();
    case 11:
      state0 = 0;
      t13 = o.get$col1().get$y();
    case 12:
      state0 = 0;
      t13 = $.add(t11, t13);
      this.col1.set$y(t13);
      t13 = this.col1.get$z();
    case 13:
      state0 = 0;
      t15 = o.get$col1().get$z();
    case 14:
      state0 = 0;
      t15 = $.add(t13, t15);
      this.col1.set$z(t15);
      t15 = this.col1.get$w();
    case 15:
      state0 = 0;
      t17 = o.get$col1().get$w();
    case 16:
      state0 = 0;
      t17 = $.add(t15, t17);
      this.col1.set$w(t17);
      t17 = this.col2.get$x();
    case 17:
      state0 = 0;
      t19 = o.get$col2().get$x();
    case 18:
      state0 = 0;
      t19 = $.add(t17, t19);
      this.col2.set$x(t19);
      t19 = this.col2.get$y();
    case 19:
      state0 = 0;
      t21 = o.get$col2().get$y();
    case 20:
      state0 = 0;
      t21 = $.add(t19, t21);
      this.col2.set$y(t21);
      t21 = this.col2.get$z();
    case 21:
      state0 = 0;
      t23 = o.get$col2().get$z();
    case 22:
      state0 = 0;
      t23 = $.add(t21, t23);
      this.col2.set$z(t23);
      t23 = this.col2.get$w();
    case 23:
      state0 = 0;
      t25 = o.get$col2().get$w();
    case 24:
      state0 = 0;
      t25 = $.add(t23, t25);
      this.col2.set$w(t25);
      t25 = this.col3.get$x();
    case 25:
      state0 = 0;
      t27 = o.get$col3().get$x();
    case 26:
      state0 = 0;
      t27 = $.add(t25, t27);
      this.col3.set$x(t27);
      t27 = this.col3.get$y();
    case 27:
      state0 = 0;
      t29 = o.get$col3().get$y();
    case 28:
      state0 = 0;
      t29 = $.add(t27, t29);
      this.col3.set$y(t29);
      t29 = this.col3.get$z();
    case 29:
      state0 = 0;
      t31 = o.get$col3().get$z();
    case 30:
      state0 = 0;
      t31 = $.add(t29, t31);
      this.col3.set$z(t31);
      t31 = this.col3.get$w();
    case 31:
      state0 = 0;
      t33 = o.get$col3().get$w();
    case 32:
      var t1, o, t3, t5, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33;
      state0 = 0;
      t33 = $.add(t31, t33);
      this.col3.set$w(t33);
      return this;
  }
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.col0.get$x());
  i = $.add(offset, 1);
  $.indexSet(array, i, this.col0.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col0.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col0.get$w());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$x());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$w());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$x());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$w());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$x());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$w());
  $.add(i, 1);
},
 mat4$zero$0: function() {
  this.col0 = $.vec4$zero();
  this.col1 = $.vec4$zero();
  this.col2 = $.vec4$zero();
  this.col3 = $.vec4$zero();
  this.col0.set$x(0);
  this.col0.set$y(0);
  this.col0.set$z(0);
  this.col0.set$w(0);
  this.col1.set$x(0);
  this.col1.set$y(0);
  this.col1.set$z(0);
  this.col1.set$w(0);
  this.col2.set$x(0);
  this.col2.set$y(0);
  this.col2.set$z(0);
  this.col2.set$w(0);
  this.col3.set$x(0);
  this.col3.set$y(0);
  this.col3.set$z(0);
  this.col3.set$w(0);
}
};

$$.quat = {"":"Object;x=,y=,z=,w=",
 setAxisAngle$2: function(axis, radians) {
  var len, halfSin;
  len = $.getInterceptor$JSStringJSArray(axis).get$length(axis);
  if ($.eqB(len, 0))
    return;
  halfSin = $.div($.sin($.mul(radians, 0.5), null), len);
  this.x = $.mul(axis.get$x(), halfSin);
  this.y = $.mul(axis.get$y(), halfSin);
  this.z = $.mul(axis.get$z(), halfSin);
  this.w = $.cos($.mul(radians, 0.5), null);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  this.z = $.div(this.z, l);
  this.w = $.div(this.w, l);
  return this;
},
 get$length2: function() {
  var t1, t2, t3, t4;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  t1 = $.add(t1, $.mul(t3, t3));
  t4 = this.w;
  return $.add(t1, $.mul(t4, t4));
},
 get$length: function() {
  return $.sqrt(this.get$length2());
},
 rotate$1: function(v) {
  var tix, tiy, tiz, tiw, tx, ty, tz, tw, result_x, result_y, result_z;
  tix = $.neg(this.x);
  tiy = $.neg(this.y);
  tiz = $.neg(this.z);
  tiw = this.w;
  tx = $.sub($.add($.add($.mul(tiw, v.get$x()), $.mul(tix, 0)), $.mul(tiy, v.get$z())), $.mul(tiz, v.get$y()));
  ty = $.sub($.add($.add($.mul(tiw, v.get$y()), $.mul(tiy, 0)), $.mul(tiz, v.get$x())), $.mul(tix, v.get$z()));
  tz = $.sub($.add($.add($.mul(tiw, v.get$z()), $.mul(tiz, 0)), $.mul(tix, v.get$y())), $.mul(tiy, v.get$x()));
  tw = $.sub($.sub($.sub($.mul(tiw, 0), $.mul(tix, v.get$x())), $.mul(tiy, v.get$y())), $.mul(tiz, v.get$z()));
  result_x = $.sub($.add($.add($.mul(tw, this.x), $.mul(tx, this.w)), $.mul(ty, this.z)), $.mul(tz, this.y));
  result_y = $.sub($.add($.add($.mul(tw, this.y), $.mul(ty, this.w)), $.mul(tz, this.x)), $.mul(tx, this.z));
  result_z = $.sub($.add($.add($.mul(tw, this.z), $.mul(tz, this.w)), $.mul(tx, this.y)), $.mul(ty, this.x));
  v.set$x(result_x);
  v.set$y(result_y);
  v.set$z(result_z);
  return v;
},
 operator$div$1: function(scale) {
  return $.quat$($.div(this.x, scale), $.div(this.y, scale), $.div(this.z, scale), $.div(this.w, scale));
},
 operator$mul$1: function(other) {
  if (typeof other === 'number')
    return $.quat$($.mul(this.x, other), $.mul(this.y, other), $.mul(this.z, other), $.mul(this.w, other));
  if (typeof other === 'object' && other !== null && !!other.is$quat)
    return $.quat$($.sub($.add($.add($.mul(this.w, other.x), $.mul(this.x, other.w)), $.mul(this.y, other.z)), $.mul(this.z, other.y)), $.sub($.add($.add($.mul(this.w, other.y), $.mul(this.y, other.w)), $.mul(this.z, other.x)), $.mul(this.x, other.z)), $.sub($.add($.add($.mul(this.w, other.z), $.mul(this.z, other.w)), $.mul(this.x, other.y)), $.mul(this.y, other.x)), $.sub($.sub($.sub($.mul(this.w, other.w), $.mul(this.x, other.x)), $.mul(this.y, other.y)), $.mul(this.z, other.z)));
},
 operator$add$1: function(other) {
  return $.quat$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()), $.add(this.z, other.get$z()), $.add(this.w, other.get$w()));
},
 operator$sub$1: function(other) {
  return $.quat$($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()), $.sub(this.z, other.get$z()), $.sub(this.w, other.get$w()));
},
 operator$negate$0: function() {
  return $.quat$($.neg(this.x), $.neg(this.y), $.neg(this.z), $.neg(this.w));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
    case 2:
      return this.z;
    case 3:
      return this.w;
  }
  return 0;
},
 operator$indexSet$2: function(i, arg) {
  switch (i) {
    case 0:
      this.x = arg;
      break;
    case 1:
      this.y = arg;
      break;
    case 2:
      this.z = arg;
      break;
    case 3:
      this.w = arg;
      break;
  }
},
 toString$0: function() {
  return $.S(this.x) + ", " + $.S(this.y) + ", " + $.S(this.z) + " @ " + $.S(this.w);
},
 quat$4: function(a, b, c, d) {
  var trace, s, i, j, k;
  this.x = 0;
  this.y = 0;
  this.z = 0;
  this.w = 1;
  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number' && typeof d === 'number') {
    this.x = a;
    this.y = b;
    this.z = c;
    this.w = d;
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$vec3 && typeof b === 'number') {
    this.setAxisAngle$2(a, b);
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$vec3) {
    this.x = a.x;
    this.y = a.y;
    this.z = a.z;
    this.w = 0;
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$quat) {
    this.x = a.x;
    this.y = a.y;
    this.z = a.z;
    this.w = a.w;
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$mat3) {
    trace = a.trace$0();
    if ($.gtB(trace, 0)) {
      s = $.sqrt($.add(trace, 1));
      this.w = s * 0.5;
      s = 0.5 / s;
      this.x = $.mul($.sub(a.col1.get$z(), a.col2.get$y()), s);
      this.y = $.mul($.sub(a.col2.get$x(), a.col0.get$z()), s);
      this.z = $.mul($.sub(a.col0.get$y(), a.col1.get$x()), s);
    } else {
      if ($.ltB(a.col0.get$x(), a.col1.get$y()))
        i = $.ltB(a.col1.get$y(), a.col2.get$z()) ? 2 : 1;
      else
        i = $.ltB(a.col0.get$x(), a.col2.get$z()) ? 2 : 0;
      j = $.mod(i + 1, 3);
      k = $.mod(i + 2, 3);
      s = $.sqrt($.add($.sub($.sub($.index(a.operator$index$1(i), i), $.index(a.operator$index$1(j), j)), $.index(a.operator$index$1(k), k)), 1));
      this.operator$indexSet$2(i, s * 0.5);
      s = 0.5 / s;
      this.operator$indexSet$2(3, $.mul($.sub($.index(a.operator$index$1(j), k), $.index(a.operator$index$1(k), j)), s));
      this.operator$indexSet$2(j, $.mul($.add($.index(a.operator$index$1(i), j), $.index(a.operator$index$1(j), i)), s));
      this.operator$indexSet$2(k, $.mul($.add($.index(a.operator$index$1(i), k), $.index(a.operator$index$1(k), i)), s));
    }
  }
},
 is$quat: true
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;arg1_1,closure_2",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;arg1_3,closure_4,arg2_5",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.Maps__emitMap_anon = {"":"Closure;box_0,visiting_1,result_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_0 !== true) {
    t2 = this.result_2;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_0 = false;
  t1 = this.result_2;
  t2 = this.visiting_1;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_0 = $.add(t1.counter_0, 1);
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_1, 0)) {
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_1 = $.add(t1.i_1, 1);
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.BoundClosure = {"":"Closure;self,target", call$1: function(p0) {
  return this.self[this.target](p0);
}
};
$$.BoundClosure0 = {"":"Closure;self,target", call$0: function() {
  return this.self[this.target]();
}
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT0.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CONSTANT0.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.throwRuntimeError = function(message) {
  throw $.$$throw($.RuntimeError$(message));
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(arg1, closure).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(arg1, closure, arg2).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CONSTANT1.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CONSTANT4.endsWith$1(message, "is null") === true || $.CONSTANT4.endsWith$1(message, "is undefined") === true || $.CONSTANT4.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.propertyTypeCastError = function(value, property) {
  var actualType, t1;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$JSString(property);
  throw $.$$throw($.CastErrorImplementation$(actualType, t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.sin0 = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos0 = function(x) {
  return Math.cos($.checkNum(x));
};

$.tan0 = function(x) {
  return Math.tan($.checkNum(x));
};

$.acos0 = function(x) {
  return Math.acos($.checkNum(x));
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT5)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT5));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CONSTANT4.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, visiting, result));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.FpsControllerView$ = function(elementId) {
  var t1 = new $.FpsControllerView(elementId, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.FpsControllerView$1(elementId);
  return t1;
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.vec4$zero = function() {
  var t1 = new $.vec4(null, null, null, null);
  t1.vec4$zero$0();
  return t1;
};

$.vec4$raw = function(x_, y_, z_, w_) {
  var t1 = new $.vec4(null, null, null, null);
  t1.vec4$raw$4(x_, y_, z_, w_);
  return t1;
};

$.animate = function(time) {
  $.view.update$1(time);
  $.view.draw$0();
  $.window().requestAnimationFrame$1($.animate);
};

$.main = function() {
  $.view = $.FpsControllerView$("#webGLCanvas");
  $.view.initWebGL$0();
  $.view.bind$0();
  $.window().requestAnimationFrame$1($.animate);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && !!o.is$Map)
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.sin = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.sin0(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.sin0(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.sin0(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.sin0(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.sin0(arg.y));
    out.set$z($.sin0(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.sin0(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.sin0(arg.y));
    out.set$z($.sin0(arg.z));
    out.set$w($.sin0(arg.w));
    return out;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
};

$.cos = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.cos0(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.cos0(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.cos0(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.cos0(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.cos0(arg.y));
    out.set$z($.cos0(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.cos0(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.cos0(arg.y));
    out.set$z($.cos0(arg.z));
    out.set$w($.cos0(arg.w));
    return out;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
};

$.tan = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.tan0(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.tan0(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.tan0(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.tan0(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.tan0(arg.y));
    out.set$z($.tan0(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.tan0(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.tan0(arg.y));
    out.set$z($.tan0(arg.z));
    out.set$w($.tan0(arg.w));
    return out;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
};

$.acos = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.acos0(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.acos0(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.acos0(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.acos0(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.acos0(arg.y));
    out.set$z($.acos0(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.acos0(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.acos0(arg.y));
    out.set$z($.acos0(arg.z));
    out.set$w($.acos0(arg.w));
    return out;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
};

$.degrees = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return arg * 180 / 3.141592653589793;
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.div($.mul(arg.x, 180), 3.141592653589793);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.div($.mul(arg.y, 180), 3.141592653589793));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.div($.mul(arg.x, 180), 3.141592653589793);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.div($.mul(arg.y, 180), 3.141592653589793));
    out.set$z($.div($.mul(arg.z, 180), 3.141592653589793));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.div($.mul(arg.x, 180), 3.141592653589793);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.div($.mul(arg.y, 180), 3.141592653589793));
    out.set$z($.div($.mul(arg.z, 180), 3.141592653589793));
    out.set$w($.div($.mul(arg.w, 180), 3.141592653589793));
    return out;
  }
  throw $.$$throw($.throwRuntimeError("cannot resolve IllegalArgumentException"));
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.makeLookAt = function(cameraPosition, cameraFocusPosition, upDirection) {
  var z, x, y, r, rotatedEye;
  z = $.sub(cameraPosition, cameraFocusPosition);
  z.normalize$0();
  x = upDirection.cross$1(z);
  x.normalize$0();
  y = z.cross$1(x);
  y.normalize$0();
  r = $.mat4$zero();
  r.operator$index$1(0).set$xyz(x);
  r.operator$index$1(1).set$xyz(y);
  r.operator$index$1(2).set$xyz(z);
  r.operator$index$1(3).set$w(1);
  r = r.transposed$0();
  rotatedEye = $.mul(r, $.neg(cameraPosition));
  $.index(r, 3).set$xyz(rotatedEye);
  return r;
};

$.makePerspective = function(fov_y_radians, aspect_ratio, znear, zfar) {
  var height, width;
  height = $.mul($.tan($.mul(fov_y_radians, 0.5), null), znear);
  width = $.mul(height, aspect_ratio);
  return $.makeFrustum($.neg(width), width, $.neg(height), height, znear, zfar);
};

$.makeFrustum = function(left, right, bottom, top$, near, far) {
  var two_near, right_minus_left, top_minus_bottom, far_minus_near, view, t1;
  if (typeof near !== 'number')
    throw $.iae(near);
  two_near = 2 * near;
  right_minus_left = $.sub(right, left);
  top_minus_bottom = $.sub(top$, bottom);
  far_minus_near = $.sub(far, near);
  view = $.mat4$zero();
  if (typeof right_minus_left !== 'number')
    throw $.iae(right_minus_left);
  t1 = two_near / right_minus_left;
  view.operator$index$1(0).set$x(t1);
  if (typeof top_minus_bottom !== 'number')
    throw $.iae(top_minus_bottom);
  t1 = two_near / top_minus_bottom;
  view.operator$index$1(1).set$y(t1);
  t1 = $.div($.add(right, left), right_minus_left);
  view.operator$index$1(2).set$x(t1);
  t1 = $.div($.add(top$, bottom), top_minus_bottom);
  view.operator$index$1(2).set$y(t1);
  t1 = $.div($.neg($.add(far, near)), far_minus_near);
  view.operator$index$1(2).set$z(t1);
  view.operator$index$1(2).set$w(-1);
  if (typeof far !== 'number')
    throw $.iae(far);
  t1 = -(two_near * far);
  if (typeof far_minus_near !== 'number')
    throw $.iae(far_minus_near);
  t1 /= far_minus_near;
  view.operator$index$1(3).set$z(t1);
  view.operator$index$1(3).set$w(0);
  return view;
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$.Float32Array_Float32Array$fromList = function(list) {
  return new Float32Array(list);
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.Float32Array_Float32Array = function(length$) {
  return new Float32Array(length$);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.Camera$ = function() {
  var t1 = new $.Camera(null, null, null, null, null, null, null);
  t1.Camera$0();
  return t1;
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.MouseKeyboardCameraController$ = function() {
  return new $.MouseKeyboardCameraController(false, false, false, false, false, false, 5, 5, 5, 360, 0, 0);
};

$.vec3$copy = function(other) {
  var t1 = new $.vec3(null, null, null);
  t1.vec3$copy$1(other);
  return t1;
};

$.vec3$raw = function(x_, y_, z_) {
  var t1 = new $.vec3(null, null, null);
  t1.vec3$raw$3(x_, y_, z_);
  return t1;
};

$.vec3$zero = function() {
  var t1 = new $.vec3(null, null, null);
  t1.vec3$zero$0();
  return t1;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.vec2$zero = function() {
  var t1 = new $.vec2(null, null);
  t1.vec2$zero$0();
  return t1;
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.vec2$raw = function(x_, y_) {
  var t1 = new $.vec2(null, null);
  t1.vec2$raw$2(x_, y_);
  return t1;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.mat4$zero = function() {
  var t1 = new $.mat4(null, null, null, null);
  t1.mat4$zero$0();
  return t1;
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.quat$ = function(a, b, c, d) {
  var t1 = new $.quat(null, null, null, null);
  t1.quat$4(a, b, c, d);
  return t1;
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.animate.call$1 = $.animate;
$.animate.$name = "animate";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
Isolate.$finishClasses($$);
$$ = {};
$.CONSTANT2 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT5 = new Isolate.$isolateProperties.Object();
$.CONSTANT4 = new Isolate.$isolateProperties.JSString();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT0 = new Isolate.$isolateProperties.JSNumber();
$.FpsControllerView_keyCodeD = 68;
$.FpsControllerView_keyCodeS = 83;
$.Primitives_hashCodeSeed = 0;
$.FpsControllerView_keyCodeW = 87;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.PI = 3.141592653589793;
$.WebGLRenderingContext_COLOR_BUFFER_BIT = 16384;
$.WebGLRenderingContext_VERTEX_SHADER = 35633;
$._getTypeNameOf = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$.view = null;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.WebGLRenderingContext_DEPTH_BUFFER_BIT = 256;
$.WebGLRenderingContext_LINES = 1;
$.WebGLRenderingContext_DEPTH_TEST = 2929;
$.WebGLRenderingContext_FLOAT = 5126;
$.WebGLRenderingContext_ARRAY_BUFFER = 34962;
$.WebGLRenderingContext_STATIC_DRAW = 35044;
$.WebGLRenderingContext_FRAGMENT_SHADER = 35632;
$.FpsControllerView_keyCodeA = 65;
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 toString$0: function() { return $.toStringForNativeObject(this); },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$List: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Collection: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLAppletElement', {"":"height=,width="
});

$.$defineNativeClass('Attr', {"":"value="
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() {
  return this.clear.call$0();
},
 clear$1: function(arg0) {
  return this.clear.call$1(arg0);
}
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
}
});

$.$defineNativeClass('HTMLButtonElement', {"":"value="
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height=,width=",
 getContext$1: function(contextId) {
  return this.getContext(contextId);
}
});

$.$defineNativeClass('CharacterData', {"":"length>",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('Document', {"":"$$dom_webkitPointerLockElement:webkitPointerLockElement~",
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.CONSTANT4.substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 click$0: function() {
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 click$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('click$0')) {
    return this.click();
  } else {
    return Object.prototype.click$0.call(this);
  }
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 webkitRequestPointerLock$0: function() {
  return this.webkitRequestPointerLock();
}
});

$.$defineNativeClass('HTMLEmbedElement', {"":"height=,width="
});

$.$defineNativeClass('EventException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('FileException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Float32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', {"":"length>"
});

$.$defineNativeClass('HTMLFrameElement', {"":"height>,width>"
});

$.$defineNativeClass('HTMLFrameSetElement', {"":"cols>,rows>",
 get$on: function() {
  return $.FrameSetElementEvents$(this);
}
});

$.$defineNativeClass('HTMLHRElement', {"":"width="
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$webkitPointerLockElement: function() {
  return $.document().get$$$dom_webkitPointerLockElement();
}
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
}
});

$.$defineNativeClass('XMLHttpRequestException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLIFrameElement', {"":"height=,width="
});

$.$defineNativeClass('HTMLImageElement', {"":"height=,width=,x>,y>"
});

$.$defineNativeClass('HTMLInputElement', {"":"height=,pattern>,value=,width=",
 get$on: function() {
  return $.InputElementEvents$(this);
}
});

$.$defineNativeClass('KeyboardEvent', {
 get$keyCode: function() {
  return this.keyCode;
}
});

$.$defineNativeClass('HTMLLIElement', {"":"value="
});

$.$defineNativeClass('DOMWindow', {
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height=,width="
});

$.$defineNativeClass('MediaController', {
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {
 get$on: function() {
  return $.MediaElementEvents$(this);
}
});

$.$defineNativeClass('HTMLMeterElement', {"":"value="
});

$.$defineNativeClass('MouseEvent', {"":"webkitMovementX>,webkitMovementY>,x>,y>"
});

$.$defineNativeClass('Node', {
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
}
});

$.$defineNativeClass('HTMLObjectElement', {"":"height=,width="
});

$.$defineNativeClass('HTMLOptionElement', {"":"value="
});

$.$defineNativeClass('HTMLOutputElement', {"":"value="
});

$.$defineNativeClass('HTMLParamElement', {"":"value="
});

$.$defineNativeClass('HTMLPreElement', {"":"width="
});

$.$defineNativeClass('HTMLProgressElement', {"":"value="
});

$.$defineNativeClass('RangeException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,value="
});

$.$defineNativeClass('StorageEvent', {"":"key>"
});

$.$defineNativeClass('HTMLTableCellElement', {"":"height=,width="
});

$.$defineNativeClass('HTMLTableColElement', {"":"width="
});

$.$defineNativeClass('HTMLTableElement', {"":"rows>,width="
});

$.$defineNativeClass('HTMLTableSectionElement', {"":"rows>"
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"cols>,rows>,value="
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"":"height=,width="
});

$.$defineNativeClass('WebGLRenderingContext', {
 attachShader$2: function(program, shader) {
  return this.attachShader(program,shader);
},
 bindBuffer$2: function(target, buffer) {
  return this.bindBuffer(target,buffer);
},
 bufferData$3: function(target, data_OR_size, usage) {
  return this.bufferData(target,data_OR_size,usage);
},
 clear$1: function(mask) {
  return this.clear(mask);
},
 clearColor$4: function(red, green, blue, alpha) {
  return this.clearColor(red,green,blue,alpha);
},
 clearDepth$1: function(depth) {
  return this.clearDepth(depth);
},
 compileShader$1: function(shader) {
  return this.compileShader(shader);
},
 createBuffer$0: function() {
  return this.createBuffer();
},
 createProgram$0: function() {
  return this.createProgram();
},
 createShader$1: function(type) {
  return this.createShader(type);
},
 disable$1: function(cap) {
  return this.disable(cap);
},
 drawArrays$3: function(mode, first, count) {
  return this.drawArrays(mode,first,count);
},
 enableVertexAttribArray$1: function(index) {
  return this.enableVertexAttribArray(index);
},
 flush$0: function() {
  return this.flush();
},
 getUniformLocation$2: function(program, name) {
  return this.getUniformLocation(program,name);
},
 linkProgram$1: function(program) {
  return this.linkProgram(program);
},
 shaderSource$2: function(shader, string) {
  return this.shaderSource(shader,string);
},
 uniformMatrix4fv$3: function(location, transpose, array) {
  return this.uniformMatrix4fv(location,transpose,array);
},
 useProgram$1: function(program) {
  return this.useProgram(program);
},
 vertexAttribPointer$6: function(indx, size, type, normalized, stride, offset) {
  return this.vertexAttribPointer(indx,size,type,normalized,stride,offset);
},
 viewport$4: function(x, y, width, height) {
  return this.viewport(x,y,width,height);
}
});

$.$defineNativeClass('XPathException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabaseException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGCircleElement', {"":"r>"
});

$.$defineNativeClass('SVGCursorElement', {"":"x>,y>"
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"height>,width>,x>,y>",
 scale$1: function(arg0) {
  return this.scale.call$1(arg0);
}
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFEPointLightElement', {"":"x>,y>,z>"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFESpotLightElement', {"":"x>,y>,z>"
});

$.$defineNativeClass('SVGFETileElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGFilterElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGGlyphRefElement', {"":"x=,y="
});

$.$defineNativeClass('SVGImageElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGMaskElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGPatternElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGRadialGradientElement', {"":"r>"
});

$.$defineNativeClass('SVGRect', {"":"height=,width=,x=,y="
});

$.$defineNativeClass('SVGRectElement', {"":"height>,width>,x>,y>"
});

$.$defineNativeClass('SVGElement', {
 click$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
}
});

$.$defineNativeClass('SVGException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height>,width>,x>,y>",
 viewport$4: function(arg0, arg1, arg2, arg3) {
  return this.viewport.call$4(arg0, arg1, arg2, arg3);
}
});

$.$defineNativeClass('SVGTextPositioningElement', {"":"x>,y>"
});

$.$defineNativeClass('SVGUseElement', {"":"height>,width>,x>,y>"
});

// 92 dynamic classes.
// 194 classes
// 17 !leaf
(function() {
  var v0_TextPositioningElement = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement', v1_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v2_SvgElement = [v0_TextPositioningElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateMotionElement|SVGAnimateColorElement|SVGAnimateTransformElement|SVGAnimateElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncGElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEComponentTransferElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDiffuseLightingElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFETurbulenceElement|SVGFilterElement|SVGFETileElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphRefElement|SVGHKernElement|SVGImageElement|SVGGlyphElement|SVGFESpotLightElement|SVGMaskElement|SVGMetadataElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLineElement|SVGPathElement|SVGMarkerElement|SVGFEMergeElement|SVGMPathElement|SVGMissingGlyphElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSwitchElement|SVGSVGElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGUseElement|SVGViewElement'].join('|'), v3_Element = [v1_MediaElement, v2_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFontElement|HTMLFormElement|HTMLFrameSetElement|HTMLFrameElement|HTMLHeadElement|HTMLHRElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLInputElement|HTMLImageElement|HTMLFieldSetElement|HTMLKeygenElement|HTMLLabelElement|HTMLLIElement|HTMLLinkElement|HTMLLegendElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v4_CharacterData = 'CharacterData|Text|CDATASection|Comment', v5_Document = 'Document|HTMLDocument|SVGDocument', v6_DocumentFragment = 'DocumentFragment|ShadowRoot', v7_Node = [v3_Element, v4_CharacterData, v5_Document, v6_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['CharacterData', v4_CharacterData], ['SVGTextPositioningElement', v0_TextPositioningElement], ['SVGElement', v2_SvgElement], ['Document', v5_Document], ['HTMLMediaElement', v1_MediaElement], ['DocumentFragment', v6_DocumentFragment], ['Element', v3_Element], ['MouseEvent', 'MouseEvent|WheelEvent'], ['Uint8Array', 'Uint8Array|Uint8ClampedArray'], ['Node', v7_Node], ['EventTarget', [v7_Node, 'EventTarget|DOMWindow|MediaController'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=fps.dart.js.map