=== Using CSS selectors to find DOM elements

=== Problem

You want to find DOM elements on a web page.

=== Solution

Use the top level `query()` and `queryAll()` functions provided in the
`dart:html` library. Both functions take CSS selectors as arguments. The
`query()` function returns the first matching element, and the `queryAll()`
function returns all matching elements.

=== Example

Here are a few examples of the use of `query()` and `queryAll()` for finding
DOM elements:

--------------------------------------------------------------------------------
<!DOCTYPE html>

<html>
  <body>
    <h1>Breakfast</h1> 
    <ul>
      <li id='first' class='mustHave'>Milk</li>
      <li class='mustHave'>Cereal
        <ul>
          <li>Bran Flakes</li>
          <li><a href='https://en.wikipedia.org/wiki/Nut_(fruit)'>Nuts</a></li>
        </ul>
      </li>
      <li>Juice</li>
    </ul>    
    
    <script type="application/dart">
      
      import 'dart:html';
      
      void main() {
    
        // Find by id.
        Element element = query('#first');
        assert(element.id == 'first');
        assert(element.innerHtml == 'Milk');
        
        // Find by class.
        List<Element> elements = queryAll('.mustHave');
        assert(elements.length == 2);
        
        // Find by ID and class.
        elements = queryAll('#first, .mustHave');
        assert(elements.length == 2);
        
        // Find by tag.
        elements = queryAll('li');
        assert(elements.length == 5);
        
        // Use hierarchical selectors.
        elements = queryAll('li > ul > li');
        assert(elements.first.innerHtml == "Bran Flakes");
        
        // Use pseudo-elements.
        element = query('li:nth-child(1)');
        assert(element.innerHtml == 'Milk');
        
        // Find by attribute.
        elements = queryAll('[href *= Nut]');
        assert(elements.length == 1);
      
      }
    </script>
    <script src="packages/browser/dart.js"></script>
  </body>
</html>
--------------------------------------------------------------------------------

For a comprehensive list of selectors that you can use for querying, see the 
http://www.w3.org/TR/css3-selectors/[The CSS Selector Specification guide].

